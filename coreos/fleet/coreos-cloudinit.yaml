#cloud-config

# Just a hack, since $private_ipv4 does not work for some reason.
# https://github.com/coreos/bugs/issues/67
write_files:
  - path: /etc/profile.d/fleetctl.sh
    permissions: 0644
    owner: root
    content: |
      # setting up FLEETCTL_ENDPOINT if necessary.
      # only needed on front hosts
      if ! systemctl status fleet > /dev/null 2>&1; then
          export FLEETCTL_ENDPOINT=http://localhost:2379/
      fi
  - path: /opt/bin/hack-dynip-environment
    permissions: 0755
    owner: root
    content: |
       #!/usr/bin/env bash
       # Just a hack, since $private_ipv4 does not work for some reason.
       # https://github.com/coreos/bugs/issues/67

       if ! grep -q COREOS_PUBLIC_IPV4 /etc/environment; then
         public_address=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
         cat >> /etc/environment <<EOF
       COREOS_PUBLIC_IPV4=$public_address
       FLEET_METADATA=$fleet_metadata
       EOF
       fi
       if ! grep -q COREOS_PRIVATE_IPV4 /etc/environment; then
         private_address=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
         cat >> /etc/environment <<EOF
       COREOS_PRIVATE_IPV4=$private_address
       ETCD_ADVERTISE_CLIENT_URLS=http://$private_address:2379
       ETCD_INITIAL_ADVERTISE_PEER_URLS=http://$private_address:2380
       ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
       ETCD_LISTEN_PEER_URLS=http://$private_address:2380
       EOF
       fi

coreos:
  update:
    reboot-strategy: $reboot_strategy
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    # specify the initial size of your cluster with ?size=X
    discovery: $etcd2_discovery_url
    proxy: $etcd2_proxy_mode
    # multi-region and multi-cloud deployments need to use $public_ipv4
    ##advertise-client-urls: http://$private_ipv4:2379
    ##initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    ##listen-client-urls: http://0.0.0.0:2379
    ##listen-peer-urls: http://$private_ipv4:2380
  fleet:
    # FIXME: Does not work yet, since coreos cloud-init parses
    # /media/configdrive/openstack/latest/meta_data.json
    # But this file does not contain any ip information.
    # The one with these infos is
    # /media/configdrive/ec2/latest/meta_data.json
    # should be the same with the ectd2 configuration
    # metadata: $fleet_metadata
  units:
    - name: etcd2.service
      command: start
      drop-ins:
        - name: 30-dynip.conf
          content: |
             [Service]
             EnvironmentFile=/etc/environment
    - name: fleet.service
      command: $fleet_status
      drop-ins:
        - name: 30-dynip.conf
          content: |
             [Service]
             EnvironmentFile=/etc/environment
    - name: hack-dynip.service
      command: start
      runtime: yes
      content: |
         [Unit]
         Description=Setting Up IP
         After=dbus.service
         Before=etcd2.service fleet.service
         [Service]
         Type=oneshot
         ExecStart=/opt/bin/hack-dynip-environment
