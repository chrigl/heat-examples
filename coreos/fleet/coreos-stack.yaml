heat_template_version: 2014-10-16
# HOT template
#
# 2016, chris@chrigl.de
# 
# Invocation example: heat stack-create -f coreos-stack.yaml -e coreos-env.yaml -P discovery_url=(curl "https://discovery.etcd.io/new?size=3") my-coreos-stack
# 

description: >
  Setting up a CoreOS cluster
  
parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
  discovery_url:
    type: string
    description: URL of discovery service (e.g. generated by https://discovery.etcd.io/new?size=3)
  flavor:
    type: string
    description: Flavor to use for coreos nodes
  front_flavor:
    type: string
    description: Flavor to use for front hosts.
  image:
    type: string
    default: CoreOS Stable
    description: Name of image to use for coreos nodes.
  count:
    type: number
    default: 3
    description: Number of coreos nodes to deploy
    constraints:
    - range:
        min: 3
      description: Must be at least 3 nodes for a working etcd2 cluster.
  front_image:
    type: string
    default: CoreOS Stable
    description: Name of image to use for front hosts. This host will get a floating ip.
  front_count:
    type: number
    default: 1
    description: Number of front nodes to deploy
    constraints:
    - range:
        min: 1
      description: Must be at least 1 to have access to the cluster.
  security_group_name_prefix:
    type: string
    default: coreos-group
    description: Prefix of the internally used SecurityGroup. Results to $prefix-OS::stack_name.
  network_name_prefix:
    type: string
    default: coreos-network
    description: Prefix of the internally used Network. Results to $prefix-OS::stack_name.
  subnet_name_prefix:
    type: string
    default: coreos-subnet
    description: Prefix of the internally used Subnet. Results to $prefix-OS::stack_name.
  coreos_reboot_strategy:
    type: string
    default: "on"
    description: Enable or disable reboot for update (on/off). Default on.

resources:

  ### Generates a user-data script that runs the Syseleven bootstrapping scripts

  network:
    type: network.yaml
    properties:
      public_net_id: { get_param: public_net_id }
      security_group_name:
        list_join:
          - '-'
          - - { get_param: security_group_name_prefix }
            - { get_param: 'OS::stack_name' }
      network_name:
        list_join:
          - '-'
          - - { get_param: network_name_prefix }
            - { get_param: 'OS::stack_name' }
      subnet_name:
        list_join:
          - '-'
          - - { get_param: subnet_name_prefix }
            - { get_param: 'OS::stack_name' }

  ### CoreOS Hosts, with floating ip
  frontnode:
    type: OS::Heat::ResourceGroup
    depends_on: network
    properties:
      count: { get_param: front_count }
      resource_def:
        type: node-front.yaml
        properties:
          server_name:
            list_join:
              - '-'
              - - { get_param: 'OS::stack_name' }
                - front%index%
          network: { get_attr: [network, network, id] }
          image: { get_param: front_image }
          flavor: { get_param: front_flavor }
          public_net_id: { get_param: public_net_id }
          key_name: { get_param: key_name }
          security_groups: [default, { get_attr: [network, security_group] }]
          discovery_url: { get_param: discovery_url }
          coreos_reboot_strategy: { get_param: coreos_reboot_strategy }

  ### CoreOS Hosts, without any floating ip
  backnode:
    type: OS::Heat::ResourceGroup 
    properties:
      count: { get_param: count }
      resource_def:
        type: node-back.yaml
        properties:
          server_name:
            list_join:
              - '-'
              - - { get_param: 'OS::stack_name' }
                - back%index%
          network: { get_attr: [network, network, id] }
          image: { get_param: image }
          flavor: { get_param: flavor }
          key_name: { get_param: key_name }
          security_groups: [default, { get_attr: [network, security_group] }]
          discovery_url: { get_param: discovery_url }
          coreos_reboot_strategy: { get_param: coreos_reboot_strategy }
