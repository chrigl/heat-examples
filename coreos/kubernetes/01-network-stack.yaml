heat_template_version: 2014-10-16

description: >
  Setting up a private Network with an snat-router

parameters:
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
  network_name:
    type: string
    default: kubernetes-network
    description: Name of the internally used Network. Default kubernetes-network.
  subnet_name:
    type: string
    default: kubernetes-subnet
    description: Name of the internally used Subnet. Default kubernetes-subnet.

resources:

  ### Creates a Neutron network and subnet
  network:
    type: OS::Neutron::Net
    properties:
      name:
        list_join:
          - '-'
          - - { get_param: 'OS::stack_name' }
            - { get_param: network_name }

  subnet:
    type: OS::Neutron::Subnet
    properties:
      name:
        list_join:
          - '-'
          - - { get_param: 'OS::stack_name' }
            - { get_param: subnet_name }
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: { get_resource: network }
      ip_version: 4
      gateway_ip: 10.0.0.1
      cidr: 10.0.0.0/8
      allocation_pools:
        - { start: 10.4.0.2, end: 10.4.9.254 }  # officially 2000 Nodes are supported by kubernetes

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: { get_param: public_net_id } }

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ subnet, router ]
    properties: 
      router_id: { get_resource: router }
      subnet: { get_resource: subnet }

  kube_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }

outputs:
  network:
    description: Created Network
    value: { get_attr: [network, show] }
  subnet:
    description: Created Subnet
    value: { get_attr: [subnet, show] }
  router:
    description: Created Router
    value: { get_attr: [router, show] }
  router_subnet_connect:
    description: Created Router to Subnet connection
    value: { get_resource: router_subnet_connect }
  floating_ip:
    description: Floating IP
    value: { get_attr: [kube_floating_ip, show] }
