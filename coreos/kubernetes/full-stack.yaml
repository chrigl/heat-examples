heat_template_version: 2015-04-30

description: Start full Kubernetes stack

parameters:
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    description: Name of image to use for servers
  discovery_url:
    type: string
    description: URL of discovery service (e.g. generated by https://discovery.etcd.io/new?size=3)
  etcd_flavor:
    type: string
    description: Flavor to use for etcd nodes
  master_flavor:
    type: string
    description: Flavor to use for master node
  worker_flavor:
    type: string
    description: Flavor to use for worker node
  worker_count:
    type: string
    description: Number of kubernetes workers, default 2
    default: 2
  hyperkube_version:
    type: string
    description: hyperkube version see https://quay.io/repository/coreos/hyperkube?tab=tags

resources:
  network:
    type: OS::Heat::ResourceGroup
    properties:
      resource_def:
        type: 01-network-stack.yaml
        properties:
          public_net_id: { get_param: public_net_id }

  etcd-cluster:
    type: OS::Heat::ResourceGroup
    properties:
      resource_def:
        type: 02-etcd-stack.yaml
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image }
          network: { list_join: [ ' ', { get_attr: [network, network, id] } ] }
          subnet: { list_join: [ ' ', { get_attr: [network, subnet, id] } ] }
          flavor: { get_param: etcd_flavor }
          discovery_url: { get_param: discovery_url }
    depends_on: network

  kube-master:
    type: OS::Heat::ResourceGroup
    properties:
      resource_def:
        type: 03-kubernetes-master-stack.yaml
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: { get_param: master_flavor }
          hyperkube_version: { get_param: hyperkube_version }
          network: { list_join: [ ' ', { get_attr: [network, network, id] } ] }
          subnet: { list_join: [ ' ', { get_attr: [network, subnet, id] } ] }
          floating_ip: { list_join: [ ' ', { get_attr: [network, floating_ip, id] } ] }
    depends_on: etcd-cluster

  kube-worker:
    type: OS::Heat::ResourceGroup
    properties:
      resource_def:
        type: 04-kubernetes-worker-stack.yaml
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: { get_param: worker_flavor }
          hyperkube_version: { get_param: hyperkube_version }
          network: { list_join: [ ' ', { get_attr: [network, network, id] } ] }
          count: { get_param: worker_count }
    depends_on: kube-master

outputs:
  public_ip:
    description: Public Kubernetes Endpoint
    value: { get_attr: [network, floating_ip] }
