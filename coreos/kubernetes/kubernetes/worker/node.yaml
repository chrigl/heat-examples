heat_template_version: 2014-10-16

description: >
  kubernetes worker node

parameters:
  network:
    type: string
    description: Network to connect to. NO default value.
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    description: Name of image to use for servers
  etcd_endpoints:
    type: string
    description: Comma separated list of etcd server http://10.0.0.16:2389,
  hyperkube_version:
    type: string
    description: hyperkube version see https://quay.io/repository/coreos/hyperkube?tab=tags
  server_name:
    type: string
    default: kubernetes-worker
    description: Name of the resulting server
  flavor:
    type: string
    default: m1.micro
    description: Flavor to use for nodes
  security_groups:
    type: comma_delimited_list
    description: Security groups for jump host
    default: default
  coreos_reboot_strategy:
    type: string
    default: "off"
    description: Enable or disable reboot for update (best-effort|etcd-lock|reboot|off). Default off.

resources:

  kubernetes_cloud_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
          - path: /etc/kubernetes/ssl/ca.pem
            permissions: "0600"
            owner: root
            content: { get_file: ../../tls/ca.pem }
          - path: /etc/kubernetes/manifests/kube-proxy.yaml
            permissions: "0600"
            owner: root
            content:
              str_replace:
                template: { get_file: manifests/kube-proxy.yaml }
                params:
                  $hyperkube_version: { get_param: hyperkube_version }
          - path: /etc/kubernetes/ssl/worker.pem
            permissions: "0600"
            owner: root
            content: { get_file: ../../tls/worker.pem }
          - path: /etc/kubernetes/worker-kubeconfig.yaml
            permissions: "0600"
            owner: root
            content: { get_file: worker-kubeconfig.yaml }
          - path: /etc/kubernetes/ssl/worker-key.pem
            permissions: "0600"
            owner: root
            content: { get_file: ../../tls/worker-key.pem }
          - path: /etc/environment-kubelet
            permissions: "0600"
            owner: root
            content:
              list_join:
                - '='
                - - "KUBELET_VERSION"
                  - { get_param: hyperkube_version }
          - path: /etc/flannel/options.env
            permission: "0600"
            owner: root
            content:
              list_join:
                - "\n"
                - - list_join:
                      - "="
                      - - "FLANNELD_IFACE"
                        - "eth0"
                  - list_join:
                      - "="
                      - - "FLANNELD_ETCD_ENDPOINTS"
                        - { get_param: etcd_endpoints }

        coreos:
          update:
            reboot-strategy: { get_param: coreos_reboot_strategy }
          units:
            - name: flanneld.service
              drop-ins:
                - name: 40-ExecStartPre-symlink.conf
                  content: |
                    [Service]
                    ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
              command: start
            - name: docker.service
              drop-ins:
                - name: 40-flannel.conf
                  content: |
                    [Unit]
                    Requires=flanneld.service
                    After=flanneld.service
              command: start
            - name: kubelet.service
              content : |
                [Service]
                ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
                EnvironmentFile=/etc/environment
                EnvironmentFile=/etc/environment-kubelet
                ExecStart=/usr/lib/coreos/kubelet-wrapper \
                  --api-servers=https://10.0.0.2 \
                  --network-plugin-dir=/etc/kubernetes/cni/net.d \
                  --register-node=true \
                  --allow-privileged=true \
                  --config=/etc/kubernetes/manifests \
                  --hostname-override=${COREOS_PRIVATE_IPV4} \
                  --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml \
                  --tls-cert-file=/etc/kubernetes/ssl/worker.pem \
                  --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem
                Restart=always
                RestartSec=10
                [Install]
                WantedBy=multi-user.target
              command: start
              enable: true

  kubernetes_worker:
    type: OS::Nova::Server
    properties:
      config_drive: False
      name: { get_param: server_name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: kubernetes_worker_port }
      user_data_format: RAW
      user_data: { get_resource: kubernetes_cloud_config }

  kubernetes_worker_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      security_groups: { get_param: security_groups }

outputs:
  server:
    description: Resulted server
    value: { get_attr: [kubernetes_worker, show] }
  port:
    description: Network port of the resulted server
    value: { get_attr: [kubernetes_worker_port, show] }
